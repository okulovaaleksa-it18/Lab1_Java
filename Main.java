
import  java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        lab1 t = new lab1(); //создали объект

        int num1;
        int num2;
        int num3;
        System.out.print("""
                           ========================================================
                           ======================СПИСОК ЗАДАЧ======================
                           =========================МЕТОДЫ=========================
                           1. Сумма знаков.
                           2. Есть ли позитив.
                           3. Большая буква.
                           4. Делитель.
                           5. Многократный вызов.
                           =========================УСЛОВИЯ========================
                           6. Безопасное деление.
                           7. Строка сравнения.
                           8. Тройная сумма.
                           9. Возраст.
                           10. Вывод дней недели.
                           ==========================ЦИКЛЫ=========================
                           11. Числа наоборот.
                           12. Степень числа.
                           13. Одинаковость.
                           14. Левый треугольник.
                           15. Угадайка.
                           =========================МАССИВЫ========================
                           16. Поиск последнего значения.
                           17. Добавление в массив.
                           18. Реверс.
                           19. Объединение.
                           20. Удалить негатив.
                           ========================================================
                           """);
        int choice = t.inputNum("Выберите номер задачи: ");
        System.out.println("Задача №" + choice + ":");

        switch (choice) {
            case(1):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public int sumLastNums (int x);
                        Необходимо реализовать метод таким образом, чтобы он
                        возвращал результат сложения двух последних знаков числа х,
                        предполагая, что знаков в числе не менее двух
                        ========================================================
                        """);
                num1 = t.inputNum("Введите число: ");
                System.out.println("Результат: " + t.sumLastNums(num1));
                break;
            case(2):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public bool isPositive (int x);
                        Необходимо реализовать метод таким образом, чтобы он
                        принимал число x и возвращал true, если оно положительное.
                        ========================================================
                        """);
                num1 = t.inputNum("Введите число: ");
                if (num1 == 0) {
                    System.out.println("Число 0 не является ни положительным, ни отрицательным.");
                } else {
                    boolean result = t.isPositive(num1);
                    System.out.println("Результат: " + result);
                }
                break;
            case(3):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public bool isUpperCase (char x);
                        Необходимо реализовать метод таким образом, чтобы он
                        принимал символ x и возвращал true, если это большая буква
                        в диапазоне от ‘A’ до ‘Z’.
                        ========================================================
                        """);
                String input = in.nextLine();
                char symbol = input.charAt(0);
                System.out.println("Результат: " + t.isUpperCase(symbol));
                break;
            case(4):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: : public bool isDivisor (int a, int b);
                        Необходимо реализовать метод таким образом, чтобы он
                        возвращал true, если любое из принятых чисел делит другое нацело.
                        ========================================================
                        """);
                num1 = t.inputNum("Введите первое число: ");
                num2 = t.inputNum("Введите второе число: ");
                System.out.println("Результат: " + t.isDivisor(num1, num2));
                break;
            case(5):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: : public int lastNumSum(int a, int b);
                        Необходимо реализовать метод таким образом, чтобы он
                        считал сумму цифр двух чисел из разряда единиц. Выполните с его
                        помощью последовательное сложение пяти чисел и результат выведите на экран.
                        ========================================================
                        """);
                num1 = t.inputNum("Введите первое число: ");
                num2 = t.inputNum("Введите второе число: ");
                int result = t.lastNumSum(num1, num2);
                System.out.println(num1 + "+" + num2 + "=" + result);
                num3 = t.inputNum("Введите третье число: ");
                int result2 = result;
                result = t.lastNumSum(result2, num3);
                System.out.println(result2 + "+" + num3 + "=" + result);
                int num4 = t.inputNum("Введите четвертое число: ");
                result2 = result;
                result = t.lastNumSum(result2, num4);
                System.out.println(result2 + "+" + num4 + "=" + result);
                int num5 = t.inputNum("Введите пятое число: ");
                result2 = result;
                result = t.lastNumSum(result2, num5);
                System.out.println(result2 + "+" + num5 + "=" + result);
                System.out.println("Итого: " + result);
                break;
            case(6):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public double safeDiv (int x, int y);
                        Необходимо реализовать метод таким образом, чтобы он возвращал деление x
                        на y, и при этом гарантировал, что не будет выкинута ошибка деления на 0. При
                        делении на 0 следует вернуть из метода число 0.
                        ========================================================
                        """);
                num1 = t.inputNum("Введите первое число: ");
                num2 = t.inputNum("Введите второе число: ");
                System.out.println("Результат: " + t.safeDiv(num1, num2));
                break;
            case(7):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public String makeDecision (int x, int y);
                        Необходимо реализовать метод таким образом, чтобы он возвращал строку,
                        которая включает два принятых методом числа и корректно выставленный
                        знак операции сравнения (больше, меньше, или равно).
                        ========================================================
                        """);
                num1 = t.inputNum("Введите первое число: ");
                num2 = t.inputNum("Введите второе число: ");
                System.out.println("Результат: " + num1 + t.makeDecision(num1,num2) + num2);
                break;
            case(8):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public bool sum3 (int x, int y, int z);
                        Необходимо реализовать метод таким образом, чтобы он возвращал true, если
                        два любых числа (из трех принятых) можно сложить так, чтобы получить
                        третье.
                        ========================================================
                        """);
                num1 = t.inputNum("Введите первое число: ");
                num2 = t.inputNum("Введите второе число: ");
                num3 = t.inputNum("Введите третье число: ");
                System.out.println("Результат: " + t.sum3(num1, num2, num3));
                break;
            case(9):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public String age (int x);
                        Необходимо реализовать метод таким образом, чтобы он возвращал строку, в
                        которой сначала будет число х, а затем одно из слов:
                        год
                        года
                        лет
                        Слово “год” добавляется, если число х заканчивается на 1, кроме числа 11.
                        Слово “года” добавляется, если число х заканчивается на 2, 3 или 4, кроме чисел
                        12, 13, 14.
                        Слово “лет” добавляется во всех остальных случаях
                        ========================================================
                        """);
                num1 = t.inputNum("Введите число: ");
                System.out.println("Результат: " + t.age(num1));
                break;
            case(10):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public void printDays (String x);
                        В качестве параметра метод принимает строку, в которой записано название
                        дня недели. Необходимо реализовать метод таким образом, чтобы он выводил
                        на экран название переданного в него дня и всех последующих до конца недели
                        дней. Если в качестве строки передан не день, то выводится текст “это не день
                        недели”. Первый день понедельник, последний – воскресенье
                        ========================================================
                        """);
                System.out.print("Введите день недели: ");
                String day = in.nextLine().trim();
                System.out.println("Результат: " );
                t.printDays(day);
                break;
            case(11):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public String reverseListNums (int x);
                        Необходимо реализовать метод таким образом, чтобы он возвращал строку, в
                        которой будут записаны все числа от x до 0 (включительно).
                        ========================================================
                        """);
                num1 = t.inputNum("Введите число: ");
                System.out.println("Результат: " + t.reverseListNums(num1));
                break;
            case(12):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public int pow (int x, int y);
                        Необходимо реализовать метод таким образом, чтобы он возвращал результат
                        возведения x в степень y.
                        ========================================================
                        """);
                num1 = t.inputNum("Введите первое число: ");
                num2 = t.inputNum("Введите второе число: ");
                System.out.println("Результат: " + t.pow(num1, num2));
                break;
            case(13):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public bool equalNum (int x);
                        Необходимо реализовать метод таким образом, чтобы он возвращал true, если
                        все знаки числа одинаковы, и false в ином случае.
                        ========================================================
                        """);
                num1 = t.inputNum("Введите число: ");
                System.out.println("Результат: " + t.equalNum(num1));
                break;
            case(14):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public void leftTriangle (int x);
                        Необходимо реализовать метод таким образом, чтобы он выводил на экран
                        треугольник из символов ‘*’ у которого х символов в высоту, а количество
                        символов в ряду совпадает с номером строки.
                        ========================================================
                        """);
                num1 = t.inputNum("Введите число: ");
                System.out.print("Результат: " );
                t.leftTriangle(num1);
                break;
            case(15):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public void guessGame()
                        Необходимо реализовать метод таким образом, чтобы он генерировал
                        случайное число от 0 до 9, далее считывал с консоли введенное пользователем
                        число и выводил, угадал ли пользователь то, что было загадано, или нет. Метод
                        запускается до тех пор, пока пользователь не угадает число. После этого
                        выведите на экран количество попыток, которое потребовалось пользователю,
                        чтобы угадать число.
                        ========================================================
                        """);
                System.out.println("Загадано число от 0 до 9, угадайте его");
                t.guessGame();
                break;
            case(16):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public int findLast (int[] arr, int x);
                        Необходимо реализовать метод таким образом, чтобы он возвращал индекс
                        последнего вхождения числа x в массив arr. Если число не входит в массив –
                        возвращается -1.
                        ========================================================
                        """);
                System.out.println("Введите количество элементов в массиве: ");
                int size = in.nextInt();
                if (size < 0) {
                    System.out.println("Количество элементов должно быть > 0");
                } else {
                    int[] arr = new int[size];
                    System.out.println("Введите элементы в массив");
                    for (int i = 0; i < arr.length; i++) {
                        int k = i + 1;
                        System.out.print("Введите значение " + k + "-ого элемента: ");
                        int element = in.nextInt();
                        arr[i] = element;
                    }
                    System.out.print("Введите значение элемента, который надо найти: ");
                    int toFind = in.nextInt();
                    result = t.findLast(arr, toFind);
                    System.out.print("Индекс последнего вхождения " + ": " + result);
                }
                break;
            case(17):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public int[]add (int[] arr, int x, int pos);
                        Необходимо реализовать метод таким образом, чтобы он возвращал новый
                        массив, который будет содержать все элементы массива arr, однако в позицию
                        pos будет вставлено значение x.
                        ========================================================
                        """);
                System.out.println("Введите количество элементов в массиве: ");
                size = in.nextInt();
                if (size < 0) {
                    System.out.println("Количество элементов должно быть > 0");
                } else {
                    int[] arr = new int[size];
                    System.out.println("Введите элементы в массив");
                    for (int i = 0; i < arr.length; i++) {
                        int k = i + 1;
                        System.out.print("Введите значение " + k + "-ого элемента: ");
                        int element = in.nextInt();
                        arr[i] = element;
                    }

                    System.out.print("Введите значение элемента, который хотите вставить: ");
                    int userNumber = in.nextInt();
                    System.out.print("Введите позицию от 0 до " + size + " куда вставить новый элемент: ");
                    int userPosition = in.nextInt();
                    if (userPosition < 0 || userPosition > size) {
                        System.out.println("Введено неверное значение.");
                        break;
                    } else {
                        int[] output = t.add(arr, userNumber, userPosition);
                        System.out.print("Итоговый массив: ");
                        for (int j : output) {
                            System.out.print(j + " ");
                        }
                    }
                }
                break;
            case(18):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public void reverse (int[] arr);
                        Необходимо реализовать метод таким образом, чтобы он изменял массив arr.
                        После проведенных изменений массив должен быть записан задом-наперед.
                        ========================================================
                        """);
                System.out.println("Введите количество элементов в массиве: ");
                size = in.nextInt();
                if (size < 0) {
                    System.out.println("Количество элементов должно быть > 0");
                } else {
                    int[] arr = new int[size];
                    System.out.println("Введите элементы в массив");
                    for (int i = 0; i < arr.length; i++) {
                        int k = i + 1;
                        System.out.print("Введите значение " + k + "-ого элемента: ");
                        int element = in.nextInt();
                        arr[i] = element;
                    }
                    t.reverse(arr);
                }
                break;
            case(19):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public int[] concat (int[] arr1,int[] arr2);
                        Необходимо реализовать метод таким образом, чтобы он возвращал новый
                        массив, в котором сначала идут элементы первого массива (arr1), а затем
                        второго (arr2).
                        ========================================================
                        """);
                System.out.println("Введите количество элементов в первом массиве: ");
                size = in.nextInt();
                if (size < 0) {
                    System.out.println("Количество элементов должно быть > 0");
                } else {
                    int[] arr = new int[size];
                    System.out.println("Введите элементы в массив");
                    for (int i = 0; i < arr.length; i++) {
                        int k = i + 1;
                        System.out.print("Введите значение " + k + "-ого элемента: ");
                        int element = in.nextInt();
                        arr[i] = element;
                    }

                    System.out.println("Введите количество элементов во втором массиве: ");
                    int size2 = in.nextInt();
                    if (size2 < 0) {
                        System.out.println("Количество элементов должно быть > 0");
                    } else {
                        int[] arr2 = new int[size2];
                        System.out.println("Введите элементы в массив");
                        for (int i = 0; i < arr2.length; i++) {
                            int k = i + 1;
                            System.out.print("Введите значение " + k + "-ого элемента: ");
                            int element = in.nextInt();
                            arr2[i] = element;
                        }
                        int[] output = t.concat(arr, arr2);
                        System.out.print("Итоговый массив: ");
                        for (int j : output) {
                            System.out.print( + j + " ");
                        }
                    }
                }
                break;
            case(20):
                System.out.print("""
                        ========================================================
                        Дана сигнатура метода: public int[] deleteNegative (int[] arr);
                        Необходимо реализовать метод таким образом, чтобы он возвращал новый
                        массив, в котором записаны все элементы массива arr кроме отрицательных.
                        ========================================================
                        """);
                System.out.println("Введите количество элементов в массиве: ");
                size = in.nextInt();
                if (size < 0) {
                    System.out.println("Количество элементов должно быть > 0");
                } else {
                    int[] arr = new int[size];
                    System.out.println("Введите элементы в массив");
                    for (int i = 0; i < arr.length; i++) {
                        int k = i + 1;
                        System.out.print("Введите значение " + k + "-ого элемента: ");
                        int element = in.nextInt();
                        arr[i] = element;
                    }
                    int[] output = t.deleteNegative(arr);
                    System.out.print("Итоговый массив: ");
                    for (int j : output) {
                        System.out.print(j + " ");
                    }
                }
                break;
            default:
                System.out.println("Такой задачи нет");

        }
    }
}
